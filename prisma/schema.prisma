// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Product {
  id              String         @id @default(cuid()) // Unique identifier for the product
  url             String         @unique // The unique URL of the product page
  currency        String
  image           String
  title           String
  currentPrice    Int // The current selling price
  originalPrice   Int // The original price (MSRP)
  lowestPrice     Int? // Optional: The lowest price recorded for this product
  highestPrice    Int? // Optional: The highest price recorded for this product
  averagePrice    Int? // Optional: The calculated average price
  discountRate    Int? // Optional: The current discount percentage
  description     String?
  isOutOfStock    Boolean        @default(false)
  
  priceHistory    PriceHistory[]
  
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}


model PriceHistory {
  id        String   @id @default(cuid())
  price     Int
  date      DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId]) // Adds a database index on productId for faster queries.
}



// model User {  
//   id              String    @id @default(cuid())
//   email           String    @unique // Each user is identified by a unique email

//   // --- Relationships ---
//   // A list of products that this user is tracking.
//   trackingProducts Product[]

//   // --- Timestamps ---
//   createdAt       DateTime  @default(now())
//   updatedAt       DateTime  @updatedAt
// }
